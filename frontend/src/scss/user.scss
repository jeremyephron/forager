//
//
// user.scss
//
// Place your own custom CSS or SCSS rules below this line, these rules will override any Bootstrap and theme variables.

$primary-alt: mix($primary,$white,6%);
$primary-alt-lighter: mix($primary,$white,2%);
$primary-alt-darker: mix($primary,$white,8%);

body, .popover {
  font-family: proxima-nova, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html, body, #root, .main {
  height: 100%;
}

.loading,
.loading input,
.loading .stack,
.loading label,
.loading div,
.loading button,
.loading a {
  cursor: wait !important;
}

.app {
  position: relative;
  padding-bottom: 2rem;
}

.modal-full {
  max-width: calc(100% - 2.5rem);
  margin-left: auto;
  margin-right: auto;
}

.cluster-modal {
  a.selectable-image, img.main {
    display: block;
    max-width: 65%;
    margin-left: auto;
    margin-right: auto;
    position: relative;

    .state {
      position: absolute;
      top: 10px;
      left: 10px;
    }
  }

  img.main {
    border: 5px solid white;
  }

  a.selectable-image img {
    width: 100%;
  }
}

.image-grid a {
  display: inline-block;
}

.image-grid a, a.selectable-image {
  img {
    border-radius: 3px;
    border: 5px solid white;

    &.selected {
      border-color: $warning;
    }
  }
}

.typeahead-bar {
  width: 100%;
}

.query-container {
  padding-top: 1rem;
  padding-bottom: 1.25rem;
  position: sticky;
  top: 0;
  background: linear-gradient($primary-alt-lighter 85%, rgba($primary-alt-lighter, 0));
  z-index: 10;
  width: 100%;

  select {
    width: 9rem;
  }

  .rc-slider {
    width: 10rem;
  }
}

.mode-container {
  select {
    width: 12rem;
  }
}

.new-mode-input {
  width: 8rem;
  padding-left: 0.6rem;
  padding-right: 0.6rem;
  display: inline;
}

.stack-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, 215px);
  grid-gap: 1rem;
  justify-content: space-between;
}

.stack {
  width: 215px;
  height: 180px;
  transition: transform 0.2s;
  display: block;

  cursor: pointer;
  position: relative;

  .thumb {
    @extend .border;
    border-radius: 4px;
    width: 200px;
    position: absolute;
  }

  @for $i from 1 through 4 {
    .thumb:nth-child(#{$i}) {
      left: ($i - 1) * 5px;
      top: (4 - $i) * 5px;
      opacity: 1 - ($i - 1) * 0.25;
      z-index: 5 - $i;
    }
  }

  &.nolabel {
    height: 149px;
  }

  .label {
    position: absolute;
    bottom: 0;
    width: 200px;
    text-align: center;
    font-size: 0.9rem;
    font-weight: normal;
  }

  &:hover {
    transform: translateY(-0.5rem);
  }
}

.popover {
  font-weight: normal;
  background-color: rgba(255, 255, 255, 0.92);

  .popover-body {
    padding-bottom: 0.6rem;
  }
}

.svm-popover {
  min-width: 25rem;
}

.rc-slider-track {
  background-color: $primary;
}

.rc-slider-handle {
  border-color: $primary !important;
  box-shadow: none !important;
}

.text-monospace {
  letter-spacing: -1px;
}

.btn:disabled {
  cursor: not-allowed;
}

.btn-light:disabled {
  border: 1px solid mix($border-color, $white, 50%);
}

.rbt-token {
  &.POSITIVE {
    @extend .alert-success;
    &.rbt-token-active {
      background-color: $success;
      color: white;
    }
  }

  &.NEGATIVE {
    background-color: #ffe7e8;
    color: #ff0500;
    text-decoration: line-through;
    &.rbt-token-active {
      background-color: #ff0500;
      color: white;
    }
  }

  &.HARD_NEGATIVE {
    background-color: #fce4f3;
    color: #ec5ab5;
    text-decoration: line-through;
    &.rbt-token-active {
      background-color: #ec5ab5;
      color: white;
    }
  }

  &.UNSURE {
    @extend .alert-info;
    &.rbt-token-active {
      background-color: $info;
      color: white;
    }

    &:after {
      content: "?";
    }
  }

  &.CUSTOM {
    color: #007bff;
  }
}

// .panel {
//   width: 40%;
//   background: $primary-alt-darker;
//   position: absolute;
//   right: 0;
//   top: 0;
//   padding-top: 5rem;
//   height: 600rem;
// }
